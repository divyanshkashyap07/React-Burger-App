{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshkashyap/React Repos/burger assignment/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport Aux from \"../../hoc/Aux\";\nimport BuilderControls from \"../../components/Burger/BuilderControls/BuilderControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENTS_PRICES = {\n  salad: 20,\n  bacon: 40,\n  cheese: 30,\n  meat: 25\n};\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ingredients: {\n        salad: 1,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 20\n    };\n\n    this.addIngredients = type => {\n      const oldCount = this.state.ingredients[type];\n      const newCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = newCount;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n    };\n\n    this.deleteIngredients = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const newCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = newCount;\n      const priceDeletion = INGREDIENTS_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeletion;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n    };\n  }\n\n  render() {\n    const disabled = { ...this.state.ingredients\n    };\n\n    for (let key in disabled) {\n      disabled[key] = disabled[key] <= 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuilderControls, {\n        addIngredients: type => this.addIngredients(type),\n        deleteIngredients: type => this.deleteIngredients(type),\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), this.state.totalPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/divyanshkashyap/React Repos/burger assignment/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","Aux","BuilderControls","INGREDIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","addIngredients","type","oldCount","newCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","deleteIngredients","priceDeletion","render","disabled","key"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport Aux from \"../../hoc/Aux\";\nimport BuilderControls from \"../../components/Burger/BuilderControls/BuilderControls\";\n\nconst INGREDIENTS_PRICES = {\n    salad: 20,\n    bacon: 40,\n    cheese: 30,\n    meat : 25\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 1,\n            bacon: 0,\n            cheese: 0,\n            meat : 0\n        },\n        totalPrice: 20\n    }\n\n    addIngredients = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const newCount = oldCount + 1;\n        const updatedIngredients = {...this.state.ingredients};\n        updatedIngredients[type] = newCount;\n        const priceAddition = INGREDIENTS_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\n    }\n\n    deleteIngredients = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const newCount = oldCount - 1;\n        const updatedIngredients = {...this.state.ingredients};\n        updatedIngredients[type] = newCount;\n        const priceDeletion = INGREDIENTS_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeletion;\n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\n    }\n\n    render() {\n        const disabled = {\n            ...this.state.ingredients\n        };\n        for (let key in disabled) {\n            disabled[key] = disabled[key] <= 0;\n        }\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuilderControls \n                    addIngredients={(type) => this.addIngredients(type)}\n                    deleteIngredients={(type) => this.deleteIngredients(type)}\n                    disabled={disabled}/>\n                {this.state.totalPrice}\n            </Aux>\n        )\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}