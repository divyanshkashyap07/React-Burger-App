{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshkashyap/React Repos/burger assignment/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport Aux from \"../../hoc/Aux\";\nimport BuilderControls from \"../../components/Burger/BuilderControls/BuilderControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENTS_PRICES = {\n  salad: 20,\n  bacon: 40,\n  cheese: 30,\n  meat: 25\n};\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 20,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.purchasableHandler = ingredients => {\n      const sum = Object.keys(ingredients).map(igkey => {\n        return ingredients[igkey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientsHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const newCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = newCount;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.purchasableHandler(updatedIngredients);\n    };\n\n    this.deleteIngredientsHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const newCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = newCount;\n      const priceDeletion = INGREDIENTS_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeletion;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.purchasableHandler(updatedIngredients);\n    };\n\n    this.purchasingHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert(\"You Continue!\");\n    };\n  }\n\n  render() {\n    const disabled = { ...this.state.ingredients\n    };\n\n    for (let key in disabled) {\n      disabled[key] = disabled[key] <= 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: [/*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients,\n          price: this.state.totalPrice,\n          purchaseCancel: this.purchaseCancelHandler,\n          purchaseContinue: this.purchaseContinueHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), console.log(this.state.purchasing)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuilderControls, {\n        addIngredients: type => this.addIngredientsHandler(type),\n        deleteIngredients: type => this.deleteIngredientsHandler(type),\n        disabled: disabled,\n        purchasable: !this.state.purchasable,\n        ordered: this.purchasingHandler,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/divyanshkashyap/React Repos/burger assignment/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","Aux","BuilderControls","Modal","OrderSummary","INGREDIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","purchasableHandler","sum","Object","keys","map","igkey","reduce","el","setState","addIngredientsHandler","type","oldCount","newCount","updatedIngredients","priceAddition","oldPrice","newPrice","deleteIngredientsHandler","priceDeletion","purchasingHandler","purchaseCancelHandler","purchaseContinueHandler","alert","render","disabled","key","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport Aux from \"../../hoc/Aux\";\nimport BuilderControls from \"../../components/Burger/BuilderControls/BuilderControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\n\nconst INGREDIENTS_PRICES = {\n    salad: 20,\n    bacon: 40,\n    cheese: 30,\n    meat : 25\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat : 0\n        },\n        totalPrice: 20,\n        purchasable: false,\n        purchasing: false\n    }\n\n    purchasableHandler = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(igkey => {\n                return ingredients[igkey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({purchasable: sum > 0});\n    }\n\n    addIngredientsHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const newCount = oldCount + 1;\n        const updatedIngredients = {...this.state.ingredients};\n        updatedIngredients[type] = newCount;\n        const priceAddition = INGREDIENTS_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\n        this.purchasableHandler(updatedIngredients);\n    }\n\n    deleteIngredientsHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const newCount = oldCount - 1;\n        const updatedIngredients = {...this.state.ingredients};\n        updatedIngredients[type] = newCount;\n        const priceDeletion = INGREDIENTS_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeletion;\n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\n        this.purchasableHandler(updatedIngredients);\n    }\n\n    purchasingHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        alert(\"You Continue!\");\n    }\n\n    render() {\n        const disabled = {\n            ...this.state.ingredients\n        };\n        for (let key in disabled) {\n            disabled[key] = disabled[key] <= 0;\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary \n                        ingredients={this.state.ingredients} \n                        price={this.state.totalPrice}\n                        purchaseCancel={this.purchaseCancelHandler}\n                        purchaseContinue={this.purchaseContinueHandler} />\n                        {console.log(this.state.purchasing)}\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuilderControls \n                    addIngredients={(type) => this.addIngredientsHandler(type)}\n                    deleteIngredients={(type) => this.deleteIngredientsHandler(type)}\n                    disabled={disabled}\n                    purchasable={!this.state.purchasable}\n                    ordered={this.purchasingHandler}\n                    price={this.state.totalPrice} />\n            </Aux>\n        )\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}